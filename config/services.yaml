# definition de Sylvere 
# Le slugger peut maintenant faire un Tolower ou la Regex. Seulement tu n'a pas la main sur ton construct car c'est le gestionnaire de service qui fait un new de ton objet. Du coup pour chaque service tu dÃ©fini quel comportement tu veux lui attribuer


# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    poster_directory: '%kernel.project_dir%/public/uploads/posters'
    slugger_to_lower: false

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    
    #a noter que le nom du parametre doit etre strictement identique a ce qui est attendu dans le constructeur
    # pour utiliser une constante presente dans nos fichier de config , '%nom_de_la_constante%'
    App\Utils\Slugger:
        arguments:
            $toLower: '%slugger_to_lower%' 
